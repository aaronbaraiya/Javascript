// javascript
 
function text(words) {
   return (words.substring(0,5));
}
 
function textTwo(wordsTwo) {
   return (wordsTwo.split(" ",1));
}
 
console.log(text("Aaron"));
console.log(textTwo("Aaron Joshua Baraiya"));                                                                                                                                         



 
#2
const tenthGraders = [
 {
   id: 324154,
   grade: 11,
   gender: "male"
 },
 
 {
   id: 21211,
   grade: 10,
   gender: "other"
 }
];
 
function receiveID() {
 const idenNum = tenthGraders[0].id;
 
 return idenNum;
}
 
function ID() {
 const secIdenNum = tenthGraders[1].id;
 
 return secIdenNum;
}
 
 
tenthGraders.forEach(function(students) {
 console.log(receiveID());
 console.log(ID());
});


#3

const person = [
 {
   id: 1,
   name: "Aaron",
   gender: "male"
 },
 
 {
   id: 2,
   name: "John",
   gender: "male"
 },
 
 {
   id: 3,
   name: "Bucky",
   gender: "male"
 }
];
 
 
//returns ID
const personDetails = person.map(function(details) {
   return details.id;
});
 
const personDetailsTwo = person.map(function(detailsTwo) {
   return detailsTwo.name;
});
 
console.log(personDetails);
console.log(personDetailsTwo[0]);
 
if((personDetailsTwo[0]) == "Aaron") {
 console.log("BOB WAZ HERE!");
}

#4:

const students = [
 {
   id: 1,
   name: "Aaron"
 },
 
 {
   id: 2,
   name: "John"
 },
 
 {
   id: 3,
   name: "Victor"
 },
 
 {
   id: 4,
   name: "Usher"
 }
];
 
const studentOne = [
 {
   id: 1,
   name: "BOB"
 }
];
 
function nameAndId() {
 console.log(studentOne.id);
 console.log(studentOne.name);
}
 
studentOne.forEach(function(firstStudent) {
 console.log(nameAndId);
});
 
const studentInfo = students.map(function(info) {
 return info.id;
});
 
const studentNames = students.map(function(names) {
 return names.name;
});
 
 
console.log(studentInfo);
console.log(studentOne);
console.log(studentNames[0]);
console.log(findName());
 
function findName() {
 if((studentNames[0]) == "Aaron") {
   console.log("Aaron is here");
 }
 else {
   console.log("ERROR 404 PAGE NOT FOUND");
 }
}

#5:

const studentOne = [
    {
        id: 1,
        name: "Aaron",
        isStudent:  true
    },
 
    {
        id: 2,
        name: "John",
        isStudent: false
    },
 
    {
        id: 3,
        name: "Victor",
        isStudent: true
    }
];
 
const student = studentOne.filter(function(isStudying) {
    return isStudying.isStudent == true;
}).map(function(isStudying) {
    return isStudying.name;
});
	
const isNotStudent = studentOne.filter(function(isNotStudying) {
    return isNotStudying.isStudent == false;
}).map(function(isNotStudying) {
    return isNotStudying.name;
}); 
 
console.log(student);
console.log(isNotStudent);

#6:

const person = [
    {
        id: 1,
        name: "Aaron",
        isStudent: true
    },

    {
        id: 2,
        name: "John",
        isStudent: true
    },

    {
        id: 3,
        name: "Victor",
        isStudent: false
    },

    {
        id: 4,
        name: "William",
        isStudent: false
    }
];

const students = [
    {
        name: "Aaron",
        gender: "male"
    }
];

students.forEach(function(information) {
    console.log(students);
});


const personTwo = person.filter(function(studying) {
    return studying.isStudent == true;
}).map(function(studying) {
    return studying.name;
});

const personThree = person.filter(function(isNotStudying) {
    return isNotStudying.isStudent == false;
}).map(function(isNotStudying) {
    return isNotStudying.name;
});

function equal() {
    if(personTwo.length == personThree.length) {
        console.log("THEY ARE BOTH EQUAL");
    }
    else {
        console.log("THEY ARE NOT BOTH EQUAL");
    }
}

console.log(personTwo);
console.log(personThree);
console.log(equal());


#7:
const schoolInformation = [
    {
        school: 1,
        students: 340,
        teachers: 88
    },

    {
        school: 2,
        students: 444,
        teachers: 91
    },

    {
        school: 3,
        students: 248,
        teachers: 57
    },

    {
        school: 4,
        students: 327,
        teachers: 77
    }
];

schoolInformation.forEach(function(numOfStudents) {
    console.log("Number of students: ");
    console.log(numOfStudents.students);
});

#8:

function Person(firstName, lastName, dob) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.dob = new Date(dob);

    this.getBirthYear = function() {
        return this.dob.getFullYear();
    }
}

const personOne = new Person("Aaron", "Baraiya", "4/14/2003");


function age() {
    const currentYear = 2020;

    const currentAge = (currentYear - personOne.dob.getFullYear()); //used to find age from current year

    console.log("Age: ");
    console.log(currentAge);
}

console.log("BirthYear is: ");
console.log(personOne.getBirthYear());
console.log(age());


#9:
function personDetails(firstName, lastName, dob) {
    this.firstName =  firstName;
    this.lastName = lastName;
    this.dob = new Date(dob);

    this.getFullYear = function() {
        return `${dob}`;
    }

    this.getFullName =  function() {
        return `${this.firstName} ${this.lastName}`;
    }
}

function airplaneDetails(aircraftName, aircraftCapacity, aircraftTicketsBooked) {
    this.aircraftName = aircraftName;
    this.aircraftCapacity = aircraftCapacity;
    this.aircraftTicketsBooked = aircraftTicketsBooked;

    this.getAirCraftName = function() {
        return `${this.aircraftName}`;
    }

    this.getAirCraftCapacity = function() {
        return `${this.aircraftCapacity}`;
    }

    this.getTicketsBooked = function() {
        return `${this.aircraftTicketsBooked}`;
    }
}

const personOneDetails = new personDetails("Aaron", "Baraiya", "4/14/2003");
const airCraft = new airplaneDetails("Boeing", 344, 320);

console.log(personOneDetails.getFullName());
console.log(personOneDetails.getFullYear());
console.log(airCraft.getAirCraftName());
console.log(airCraft.getAirCraftCapacity());
console.log(airCraft.getTicketsBooked());

#10:
const basicDetails = [
    {
        numOfPeople:  300,
        categoryOfPeople: 14,
    },

    {
        numOfPeople: 244,
        categoryOfPeople: 10
    }
];


function personDetails(firstName, lastName, dob) {
    this.firstName =  firstName;
    this.lastName = lastName;
    this.dob = new Date(dob);

    this.getFullYear = function() {
        return `${dob}`;
    }

    this.getFullName =  function() {
        return `${this.firstName} ${this.lastName}`;
    }
}

function airplaneDetails(aircraftName, aircraftCapacity, aircraftTicketsBooked) {
    this.aircraftName = aircraftName;
    this.aircraftCapacity = aircraftCapacity;
    this.aircraftTicketsBooked = aircraftTicketsBooked;

    this.getAirCraftName = function() {
        return `${this.aircraftName}`;
    }

    this.getAirCraftCapacity = function() {
        return `${this.aircraftCapacity}`;
    }

    this.getTicketsBooked = function() {
        return `${this.aircraftTicketsBooked}`;
    }
}

function numOfPeopleCalculator() {
    if((basicDetails[0].numOfPeople) > 200) {
        console.log("NUM  > 200");
    }
    else {
        console.log("ELSE");
    } 
}

const personOneDetails = new personDetails("Aaron", "Baraiya", "4/14/2003");
const airCraft = new airplaneDetails("Boeing", 344, 320);

console.log(personOneDetails.getFullName());
console.log(personOneDetails.getFullYear());
console.log(airCraft.getAirCraftName());
console.log(airCraft.getAirCraftCapacity());
console.log(airCraft.getTicketsBooked());
console.log(basicDetails[0].numOfPeople);
console.log(numOfPeopleCalculator());


#11:

const information = [
    {
        id: 324154,
        name: "Aaron",
        gender: "male"
    },

    {
        id: 215351,
        name: "Joshua",
        gender: "male"
    }, 

    {
        id: 684952,
        name: "Victor",
        gender: "male"
    }
];

console.log("Details: ");

information.forEach(function(ID) {
    console.log("ID: ");
    console.log(ID.id);
});

information.forEach(function(name) {
    console.log("Name: ");
    console.log(name.name);
});

information.forEach(function(gender) {
    console.log("Gender: ");
    console.log(gender.gender);
});

const getName = information.map(function(studentName) {
    console.log("Student names: ");
    return studentName.name;
});

function determineSomething() {
    if((getName[0] == "Aaron")) {
        console.log("Hello " + `${getName[0]}`);
    }
}


console.log(getName);
console.log(determineSomething());

#12: INCOMPELETED PROBLEM STILL MUST BE FIXED;

function animals(num1, num2, num3) {

    const chickens = 2;
    const cows = 4;
    const pigs = 4;

    const chickenLegs = num1 * chickens;
    const cowLegs = num2 * cows;
    const pigLegs = num3 * pigs;

    console.log(chickenLegs);
    console.log(cowLegs);
    console.log(pigLegs);
}

console.log(animals(2, 3, 5));

#13:


class Person {
    constructor(firstName, lastName, dob, gender) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.dob = new Date(dob);
        this.gender = gender;
    }

    getFullName() {
        return this.firstName + this.lastName;
    }

    getFullYear() {
        return this.dob;
    }

    getGender() {
        return this.gender;
    }
}

function checkGender() {
    if(personOne.getGender() == "Male") {
        console.log("Good to know ur straight")
    }
    else {
        console.log("YOUR GAIIII!!!");
    }
}

const personOne = new Person("Aaron", " Baraiya", "4/14/2003", "Male");

console.log(personOne.getFullName());
console.log(personOne.getFullYear());
console.log(personOne.getGender());
console.log(checkGender());


//FOR FUN BASED ON UPPER CODE:
"use strict";

const personDetails = [
    {
        name: "Aaron",
        gender: "male",
        age: 16
    },

    {
        name : "Victor",
        gender: "male",
        age: 40
    },

    {
        name: "John",
        gender: "male",
        age: 25
    }
]; 

function getName() {
    const personName = personDetails[0].name;

    return personName;
}

function getNameTwo() {
    const personName = personDetails[1].name;

    return personName;
}

function getNameThree() {
    const personName = personDetails[2].name;

    return personName;
} 

const personName = personDetails.map(function(perName) {
    return perName.name;
});

const personID = personDetails.map(function(perAge) {
    return perAge.age;
});



if((personName[1]) == "Victor") {
    document.write(`Hello ${personName[1]}`);
}
else {
    document.write("Hello");
}

console.log(personID);



/*NEW ONE*/:



// javascript

const data = [
    {
        name: "Aaron",
        gender: "male",
        id: 324154
    },
    
    {
        name: "John",
        gender: "male",
        id: 345901
    },
    
    {
        name: "BOB",
        gender: "male",
        id: 768594
    }
];

const getName = data.map(function(personName) {
    return personName.name;
});

function respondToName() {
    if(getName[0] == "Aaron") {
        console.log(`Hello ${getName[0]}`);
    }
     if(getName[2] == "BOB") {
        console.log(`YOOOO ${getName[2]}`);
    }
}

console.log(getName);
respondToName();


//NEW:
// javascript

const data = [
    {
        gender: "male",
        grade: 11,
        age: 16
    },
    
    {
        gender: "male",
        grade: 9,
        age: 14
    },
    
    {
        gender: "male",
        grade: 10,
        age: 15
    },
    
    {
        gender: "other",
        grade: 12,
        age: 18
    }
];

otherPersons = "Not male: ";

//forEach method
/*
data.forEach(function(person) {
    console.log(`Gender: ${person.gender}`);
});*/

//number of males and other
const numOfMen = data.filter(function(male) {  
    
    malePersons = "Male persons: ";
    console.log(malePersons);
    
    if(male.gender == "male") {
        return true;
    }
    else {
        return false;
    }
});

//ifNotMale
const numOther = data.filter(function(notMale) {
       
    if(notMale.gender != "male") {
        return true;
    }
    else {
        return false;
    }
});

console.log(numOfMen);
console.log(otherPersons);
console.log(numOther);

//NEW:
// javascript

const companies = [
  {
    name: "Company One", category: "Finance", start: 1981, end: 2003
  },
  {name: "Company Two", category: "Retail", start: 1992, end: 2008},
  {name: "Company Three", category: "Auto", start: 1999, end: 2007},
  {name: "Company Four", category: "Retail", start: 1989, end: 2010},
  {name: "Company Five", category: "Technology", start: 2009, end: 2014},
  {name: "Company Six", category: "Finance", start: 1987, end: 2010},
  {name: "Company Seven", category: "Auto", start: 1986, end: 1996},
  {name: "Company Eight", category: "Technology", start: 2011, end: 2016},
  {name: "Company Nine", category: "Retail", start: 1981, end: 1989}
];

const ages = [33, 12, 20, 16, 5, 54, 21, 44, 61, 13, 15, 45, 25, 64, 32];

/*
//for loop
for(let i = 0; i < companies.length; i++) {
    console.log(companies[i]);
}

//forEach
//prints out whatever is in the console
companies.forEach(function(company) {
    console.log(company.name);
});

//filter
const ageDrinkage = ages.filter(function(age) {
    if(age >= 21) {
        return true;
    }
});

console.log(ageDrinkage);

//filter retail companies
const retailCompany = companies.filter(function(companyRetail) {
    if(companyRetail.category == "Retail") {
        return true;
    }
});

console.log(retailCompany);


//filter companies from the 80s
const companyEight = companies.filter(function (check) {
    if(check.start > 1980 && check.start < 1990) {
        return true;
    }
    else {
       return false;
    }
});

console.log(companyEight);

//companies that lasted for more than 10 years
const moreThanTen = companies.filter(function(tenYears) {
    let companyLength = (tenYears.end) - (tenYears.start);
    
    if(companyLength >= 10) {
        return true;
    }
    else {
        return false;
    }
});

console.log(moreThanTen);*/

//map
